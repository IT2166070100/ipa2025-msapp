services:
  web:
    build: ./web
    ports:
      - "8080:8080"
    depends_on:
      - mongo
    networks:
      - app-net
    env_file:
      - .env
    environment:
      - MONGO_URI="mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/"


  mongo:
    image: mongo:6
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - app-net
    env_file:
      - .env
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/ipa2025_db --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  rabbitmq:
    image: rabbitmq:3-management
    depends_on:
      - mongo
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - app-net
    env_file:
      - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

  scheduler:
    build: ./scheduler
    depends_on:
      mongo:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - app-net
    env_file:
      - .env
    environment:
      - MONGO_URI="mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/"

  worker:
    build: ./worker
    depends_on:
      rabbitmq:
        condition: service_healthy
      mongo:
        condition: service_healthy
    networks:
      - app-net
    env_file:
      - .env
        environment:
      - MONGO_URI="mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/"

volumes:
  mongo-data:

networks:
  app-net: